import {
  FlowGraphExecutionBlockWithOutSignal
} from "./chunk-M4XPDEB2.js";
import "./chunk-EHTMQ6LM.js";
import "./chunk-PYSI5FMN.js";
import "./chunk-4SAYSEWY.js";
import "./chunk-77BXJTWI.js";
import "./chunk-PCT56CJF.js";
import "./chunk-7XY2OFQB.js";
import {
  RegisterClass
} from "./chunk-MIVJKRRS.js";
import "./chunk-3DTNSITF.js";
import "./chunk-GCT36VBF.js";
import "./chunk-NTQN2BXV.js";
import "./chunk-HKJ2B2AA.js";

// node_modules/@babylonjs/core/FlowGraph/Blocks/Event/flowGraphSendCustomEventBlock.js
var FlowGraphSendCustomEventBlock = class extends FlowGraphExecutionBlockWithOutSignal {
  constructor(config) {
    super(config);
    this.config = config;
    for (const key in this.config.eventData) {
      this.registerDataInput(key, this.config.eventData[key].type, this.config.eventData[key].value);
    }
  }
  _execute(context) {
    const eventId = this.config.eventId;
    const eventData = {};
    for (const port of this.dataInputs) {
      eventData[port.name] = port.getValue(context);
    }
    context.configuration.coordinator.notifyCustomEvent(eventId, eventData);
    this.out._activateSignal(context);
  }
  /**
   * @returns class name of the block.
   */
  getClassName() {
    return "FlowGraphReceiveCustomEventBlock";
  }
};
RegisterClass("FlowGraphReceiveCustomEventBlock", FlowGraphSendCustomEventBlock);
export {
  FlowGraphSendCustomEventBlock
};
//# sourceMappingURL=flowGraphSendCustomEventBlock-YVSRDGN6.js.map

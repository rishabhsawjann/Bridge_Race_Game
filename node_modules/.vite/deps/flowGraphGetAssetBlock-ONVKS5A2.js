import {
  GetFlowGraphAssetWithType
} from "./chunk-44AHU22M.js";
import {
  getNumericValue
} from "./chunk-3F6WI3CQ.js";
import {
  FlowGraphBlock,
  FlowGraphInteger,
  RichTypeAny
} from "./chunk-PYSI5FMN.js";
import "./chunk-4SAYSEWY.js";
import "./chunk-77BXJTWI.js";
import "./chunk-PCT56CJF.js";
import "./chunk-7XY2OFQB.js";
import {
  RegisterClass
} from "./chunk-MIVJKRRS.js";
import "./chunk-3DTNSITF.js";
import "./chunk-GCT36VBF.js";
import "./chunk-NTQN2BXV.js";
import "./chunk-HKJ2B2AA.js";

// node_modules/@babylonjs/core/FlowGraph/Blocks/Data/flowGraphGetAssetBlock.js
var FlowGraphGetAssetBlock = class extends FlowGraphBlock {
  constructor(config) {
    super(config);
    this.config = config;
    this.type = this.registerDataInput("type", RichTypeAny, config.type);
    this.value = this.registerDataOutput("value", RichTypeAny);
    this.index = this.registerDataInput("index", RichTypeAny, new FlowGraphInteger(getNumericValue(config.index ?? -1)));
  }
  _updateOutputs(context) {
    const type = this.type.getValue(context);
    const index = this.index.getValue(context);
    const asset = GetFlowGraphAssetWithType(context.assetsContext, type, getNumericValue(index), this.config.useIndexAsUniqueId);
    this.value.setValue(asset, context);
  }
  /**
   * Gets the class name of this block
   * @returns the class name
   */
  getClassName() {
    return "FlowGraphGetAssetBlock";
  }
};
RegisterClass("FlowGraphGetAssetBlock", FlowGraphGetAssetBlock);
export {
  FlowGraphGetAssetBlock
};
//# sourceMappingURL=flowGraphGetAssetBlock-ONVKS5A2.js.map

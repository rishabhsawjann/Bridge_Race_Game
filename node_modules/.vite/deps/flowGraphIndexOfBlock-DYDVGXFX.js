import {
  FlowGraphBlock,
  FlowGraphInteger,
  RichTypeAny,
  RichTypeFlowGraphInteger
} from "./chunk-PYSI5FMN.js";
import "./chunk-4SAYSEWY.js";
import "./chunk-77BXJTWI.js";
import "./chunk-PCT56CJF.js";
import "./chunk-7XY2OFQB.js";
import {
  RegisterClass
} from "./chunk-MIVJKRRS.js";
import "./chunk-3DTNSITF.js";
import "./chunk-GCT36VBF.js";
import "./chunk-NTQN2BXV.js";
import "./chunk-HKJ2B2AA.js";

// node_modules/@babylonjs/core/FlowGraph/Blocks/Data/Utils/flowGraphIndexOfBlock.js
var FlowGraphIndexOfBlock = class extends FlowGraphBlock {
  /**
   * Construct a FlowGraphIndexOfBlock.
   * @param config construction parameters
   */
  constructor(config) {
    super(config);
    this.config = config;
    this.object = this.registerDataInput("object", RichTypeAny);
    this.array = this.registerDataInput("array", RichTypeAny);
    this.index = this.registerDataOutput("index", RichTypeFlowGraphInteger, new FlowGraphInteger(-1));
  }
  /**
   * @internal
   */
  _updateOutputs(context) {
    const object = this.object.getValue(context);
    const array = this.array.getValue(context);
    if (array) {
      this.index.setValue(new FlowGraphInteger(array.indexOf(object)), context);
    }
  }
  /**
   * Serializes this block
   * @param serializationObject the object to serialize to
   */
  serialize(serializationObject) {
    super.serialize(serializationObject);
  }
  getClassName() {
    return "FlowGraphIndexOfBlock";
  }
};
RegisterClass("FlowGraphIndexOfBlock", FlowGraphIndexOfBlock);
export {
  FlowGraphIndexOfBlock
};
//# sourceMappingURL=flowGraphIndexOfBlock-DYDVGXFX.js.map

import {
  FlowGraphExecutionBlock
} from "./chunk-EHTMQ6LM.js";
import {
  RichTypeBoolean
} from "./chunk-PYSI5FMN.js";
import "./chunk-4SAYSEWY.js";
import "./chunk-77BXJTWI.js";
import "./chunk-PCT56CJF.js";
import "./chunk-7XY2OFQB.js";
import {
  RegisterClass
} from "./chunk-MIVJKRRS.js";
import "./chunk-3DTNSITF.js";
import "./chunk-GCT36VBF.js";
import "./chunk-NTQN2BXV.js";
import "./chunk-HKJ2B2AA.js";

// node_modules/@babylonjs/core/FlowGraph/Blocks/Execution/ControlFlow/flowGraphFlipFlopBlock.js
var FlowGraphFlipFlopBlock = class extends FlowGraphExecutionBlock {
  constructor(config) {
    super(config);
    this.onOn = this._registerSignalOutput("onOn");
    this.onOff = this._registerSignalOutput("onOff");
    this.value = this.registerDataOutput("value", RichTypeBoolean);
  }
  _execute(context, _callingSignal) {
    let value = context._getExecutionVariable(this, "value", typeof this.config?.startValue === "boolean" ? !this.config.startValue : false);
    value = !value;
    context._setExecutionVariable(this, "value", value);
    this.value.setValue(value, context);
    if (value) {
      this.onOn._activateSignal(context);
    } else {
      this.onOff._activateSignal(context);
    }
  }
  /**
   * @returns class name of the block.
   */
  getClassName() {
    return "FlowGraphFlipFlopBlock";
  }
};
RegisterClass("FlowGraphFlipFlopBlock", FlowGraphFlipFlopBlock);
export {
  FlowGraphFlipFlopBlock
};
//# sourceMappingURL=flowGraphFlipFlopBlock-E43NY4XR.js.map
